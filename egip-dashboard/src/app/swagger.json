{
  "swagger": "2.0",
  "info": {
    "description": "Api Documentation",
    "version": "1.0",
    "title": "Api Documentation",
    "termsOfService": "urn:tos",
    "contact": {

    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    }
  },
  "host": "mmonitor.gost-group.com",
  "basePath": "/",
  "tags": [
    {
      "name": "active-filter-controller",
      "description": "Active Filter Controller"
    },
    {
      "name": "alias-controller",
      "description": "Alias Controller"
    },
    {
      "name": "basic-error-controller",
      "description": "Basic Error Controller"
    },
    {
      "name": "caches-controller",
      "description": "Caches Controller"
    },
    {
      "name": "camera-controller",
      "description": "Camera Controller"
    },
    {
      "name": "dashlet-controller",
      "description": "Dashlet Controller"
    },
    {
      "name": "features-controller",
      "description": "Features Controller"
    },
    {
      "name": "generator-controller",
      "description": "Generator Controller"
    },
    {
      "name": "graph-ql-controller",
      "description": "Graph QL Controller"
    },
    {
      "name": "graphics-controller",
      "description": "Graphics Controller"
    },
    {
      "name": "incident-controller",
      "description": "Incident Controller"
    },
    {
      "name": "layer-administration-controller",
      "description": "Layer Administration Controller"
    },
    {
      "name": "layer-incident-controller",
      "description": "Layer Incident Controller"
    },
    {
      "name": "layer-mapping-administration-controller",
      "description": "Layer Mapping Administration Controller"
    },
    {
      "name": "layers-controller",
      "description": "Layers Controller"
    },
    {
      "name": "legend-controller",
      "description": "Legend Controller"
    },
    {
      "name": "mappings-controller",
      "description": "Mappings Controller"
    },
    {
      "name": "operation-handler",
      "description": "Operation Handler"
    },
    {
      "name": "property-controller",
      "description": "Property Controller"
    },
    {
      "name": "report-calculate-controller",
      "description": "Report Calculate Controller"
    },
    {
      "name": "report-controller",
      "description": "Report Controller"
    },
    {
      "name": "report-file-controller",
      "description": "Report File Controller"
    },
    {
      "name": "report-info-controller",
      "description": "Report Info Controller"
    },
    {
      "name": "security-journal-output-controller",
      "description": "Security Journal Output Controller"
    },
    {
      "name": "system-type-controller",
      "description": "System Type Controller"
    },
    {
      "name": "table-controller",
      "description": "Table Controller"
    },
    {
      "name": "ts-info-controller",
      "description": "Ts Info Controller"
    },
    {
      "name": "violations-controller",
      "description": "Violations Controller"
    },
    {
      "name": "weather-controller",
      "description": "Weather Controller"
    },
    {
      "name": "web-mvc-links-handler",
      "description": "Web Mvc Links Handler"
    },
    {
      "name": "widget-controller",
      "description": "Widget Controller"
    },
    {
      "name": "winter-controller",
      "description": "Winter Controller"
    }
  ],
  "paths": {
    "/actuator": {
      "get": {
        "tags": [
          "web-mvc-links-handler"
        ],
        "summary": "links",
        "operationId": "linksUsingGET",
        "produces": [
          "application/json",
          "application/vnd.spring-boot.actuator.v2+json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/Link"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/actuator/health": {
      "get": {
        "tags": [
          "operation-handler"
        ],
        "summary": "handle",
        "operationId": "handleUsingGET_2",
        "produces": [
          "application/json",
          "application/vnd.spring-boot.actuator.v2+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": false,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/actuator/health/{component}": {
      "get": {
        "tags": [
          "operation-handler"
        ],
        "summary": "handle",
        "operationId": "handleUsingGET_1",
        "produces": [
          "application/json",
          "application/vnd.spring-boot.actuator.v2+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": false,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/actuator/health/{component}/{instance}": {
      "get": {
        "tags": [
          "operation-handler"
        ],
        "summary": "handle",
        "operationId": "handleUsingGET",
        "produces": [
          "application/json",
          "application/vnd.spring-boot.actuator.v2+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": false,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/actuator/info": {
      "get": {
        "tags": [
          "operation-handler"
        ],
        "summary": "handle",
        "operationId": "handleUsingGET_3",
        "produces": [
          "application/json",
          "application/vnd.spring-boot.actuator.v2+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": false,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/graphql": {
      "post": {
        "tags": [
          "graph-ql-controller"
        ],
        "summary": "graphql",
        "operationId": "graphqlUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/admin/active_filter": {
      "get": {
        "tags": [
          "active-filter-controller"
        ],
        "summary": "getActiveFilter",
        "operationId": "getActiveFilterUsingGET",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestResult«List«ActiveFilterDTO»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "active-filter-controller"
        ],
        "summary": "updateActiveFilter",
        "operationId": "updateActiveFilterUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "activeFilterDTO",
            "description": "activeFilterDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ActiveFilterDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestResult«ActiveFilterDTO»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/admin/incident/close": {
      "get": {
        "tags": [
          "incident-controller"
        ],
        "summary": "Запрос позволяет закрыть индицент нв date open + 1 day 18:00",
        "description": "Метод позволяет закрыть индицент по иентификатору",
        "operationId": "closeIncidentUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "description": "Дата и время на которое необходимо получить выгрузку",
            "required": false,
            "type": "string",
            "format": "date-time",
            "allowEmptyValue": false,
            "x-example": "2019-11-11T21:00:00"
          },
          {
            "name": "ids",
            "in": "query",
            "description": "Список идентификаторов индидентов",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "x-example": "2094704038"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/admin/incident/delete": {
      "get": {
        "tags": [
          "incident-controller"
        ],
        "summary": "Запрос позволяет удалить инцидент по идентификатору",
        "description": "Метод позволяет удалить индицент по иентификатору",
        "operationId": "deleteIncidentUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "Список идентификаторов индидентов",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "x-example": "2094704038"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/admin/incident/getData/csv": {
      "get": {
        "tags": [
          "incident-controller"
        ],
        "summary": "Запрос для выгрузки данных из таблицы инцидентов.",
        "description": "Метод позволяет получить выгрузку на определенную дату.",
        "operationId": "getDataByDateCSVUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "description": "Дата и время на которое необходимо получить выгрузку",
            "required": false,
            "type": "string",
            "format": "date-time",
            "allowEmptyValue": false,
            "x-example": "2019-11-11T21:00:00"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/admin/incident/getData/excel": {
      "get": {
        "tags": [
          "incident-controller"
        ],
        "summary": "Запрос для выгрузки данных из таблицы инцидентов.",
        "description": "Метод позволяет получить выгрузку на определенную дату.",
        "operationId": "getDataByDateExcelUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "description": "Дата и время на которое необходимо получить выгрузку",
            "required": false,
            "type": "string",
            "format": "date-time",
            "allowEmptyValue": false,
            "x-example": "2019-11-11T21:00:00"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/admin/layers": {
      "get": {
        "tags": [
          "layer-administration-controller"
        ],
        "summary": "Запрос на получение слоёв с фильтрацией и пагинацией.",
        "description": "Метод позволяет получить слои.",
        "operationId": "searchLayersUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "enabled",
            "in": "query",
            "description": "enabled",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "field",
            "in": "query",
            "description": "field",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "paged",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "sort.sorted",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "sort.unsorted",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "unpaged",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestResult«PageResult«LayerDTO»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/admin/layers/edit": {
      "post": {
        "tags": [
          "layer-administration-controller"
        ],
        "summary": "Запрос редактирование полей слоя",
        "description": "Метод позволяет редактировать информацию слоя.",
        "operationId": "editLayerUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "info",
            "description": "info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LayerDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/admin/layers/enable": {
      "post": {
        "tags": [
          "layer-administration-controller"
        ],
        "summary": "Запрос позволяет включать и выключать слой",
        "operationId": "editEnableStatusUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "layerAlias",
            "description": "layerAlias",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LayerDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/admin/layers/layer_type": {
      "get": {
        "tags": [
          "layer-administration-controller"
        ],
        "summary": "getLayerTypes",
        "operationId": "getLayerTypesUsingGET",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestResult«Map«string,string»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/admin/layers/mapping": {
      "post": {
        "tags": [
          "layer-mapping-administration-controller"
        ],
        "summary": "Запрос на добавление объекта маппинга полей слоя.",
        "description": "Метод позволяет добавить маппинг поля слоя.",
        "operationId": "addLayerMappingUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "mapping",
            "description": "mapping",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FieldMappingDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestResult«FieldMappingDTO»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/admin/layers/mapping/{alias}": {
      "get": {
        "tags": [
          "layer-mapping-administration-controller"
        ],
        "summary": "Запрос на получение объектов маппинга полей слоя, по алиасу слоя.",
        "description": "Метод позволяет получить информацию маппингам полей слоя.",
        "operationId": "getLayerMappingUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "alias",
            "in": "path",
            "description": "Alias слоя.",
            "required": false,
            "type": "string",
            "x-example": "dt"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestResult«List«FieldMappingDTO»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/admin/layers/mapping/{alias}/attributeValues": {
      "get": {
        "tags": [
          "layer-mapping-administration-controller"
        ],
        "summary": "Запрос на получение доступных значений маппинга по алиасу слоя.",
        "description": "Метод позволяет получить доступные значения маппинга по алиасу слоя.",
        "operationId": "getAttributeValuesByAliasUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "alias",
            "in": "path",
            "description": "id маппинга.",
            "required": false,
            "type": "string",
            "x-example": "mkd"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestResult«List«string»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/admin/layers/mapping/{id}": {
      "delete": {
        "tags": [
          "layer-mapping-administration-controller"
        ],
        "summary": "Запрос на удаление объекта маппинга поля слоя по id.",
        "description": "Метод позволяет удалить маппинг поля слоя.",
        "operationId": "deleteLayerMappingUsingDELETE",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id маппинга.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/admin/layers/updateLayerInfo": {
      "patch": {
        "tags": [
          "layer-administration-controller"
        ],
        "summary": "updateLayerData",
        "operationId": "updateLayerDataUsingPATCH",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "layerId",
            "in": "query",
            "description": "layerId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestResult«Map»"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/admin/report/calculate": {
      "get": {
        "tags": [
          "report-calculate-controller"
        ],
        "summary": "Запрос для запуска принудительной генерации отчётов.",
        "description": "Метод позволяет запустить генерацию отчётов.",
        "operationId": "calculateUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "description": "date",
            "required": true,
            "type": "string",
            "format": "date"
          },
          {
            "name": "reportType",
            "in": "query",
            "description": "reportType",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/aliases": {
      "get": {
        "tags": [
          "alias-controller"
        ],
        "summary": "Алиасы слоёв",
        "description": "Метод выводит перечень алиасов слоёв",
        "operationId": "getAliasesUsingGET",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestResult«List«LayerAliasDTO»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "alias-controller"
        ],
        "summary": "Добавление нового алиаса слоя",
        "description": "Метод добавления алиаса",
        "operationId": "addAliasUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "alias",
            "description": "alias",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LayerAliasDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/aliases/{id}": {
      "delete": {
        "tags": [
          "alias-controller"
        ],
        "summary": "удаление алиаса слоя по идентификатору",
        "description": "Метод удаляет алиас",
        "operationId": "deleteAliasUsingDELETE",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/dashlet": {
      "get": {
        "tags": [
          "dashlet-controller"
        ],
        "summary": "sourceWidget",
        "operationId": "sourceWidgetUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "description": "date",
            "required": true,
            "type": "string",
            "format": "date"
          },
          {
            "name": "districtId",
            "in": "query",
            "description": "Код района",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "regionId",
            "in": "query",
            "description": "Код округа",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "theme",
            "in": "query",
            "description": "theme",
            "required": false,
            "type": "string",
            "default": "light"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestResult«DashletDTO»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/features/{alias}": {
      "get": {
        "tags": [
          "features-controller"
        ],
        "summary": "Запрос на получение данных по объектам заданного слоя города/округов/района",
        "description": "Метод позволяет получить информацию по объектам заданного слоя города/округов/района",
        "operationId": "featuresUsingGET_1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "alias",
            "in": "path",
            "description": "Alias слоя города/округа/района. Используется в формировании URL.",
            "required": false,
            "type": "string",
            "x-example": "<uri>/features/moscow.russia"
          },
          {
            "name": "cache",
            "in": "header",
            "description": "cache",
            "required": false,
            "type": "string"
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Временное окно для ревизий объектов слоя. Дата и время окончания периода",
            "required": false,
            "type": "string",
            "format": "date-time",
            "allowEmptyValue": false,
            "x-example": "yyyy-MM-ddThh:mm:ss"
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Временное окно для ревизий объектов слоя. Дата и время начала периода",
            "required": false,
            "type": "string",
            "format": "date-time",
            "allowEmptyValue": false,
            "x-example": "yyyy-MM-ddThh:mm:ss"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/features/{alias}/{filter}/{value}": {
      "get": {
        "tags": [
          "features-controller"
        ],
        "summary": "Запрос на получение данных по объектам заданного слоя города/округов/района",
        "description": "Метод позволяет получить информацию по объектам заданного слоя города/округов/района",
        "operationId": "featuresUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "alias",
            "in": "path",
            "description": "Alias слоя города/округа/района. Используется в формировании URL.",
            "required": false,
            "type": "string",
            "x-example": "<uri>/features/moscow.russia"
          },
          {
            "name": "cache",
            "in": "header",
            "description": "cache",
            "required": false,
            "type": "string",
            "default": "false"
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Временное окно для ревизий объектов слоя. Дата и время окончания периода",
            "required": false,
            "type": "string",
            "format": "date-time",
            "allowEmptyValue": false,
            "x-example": "yyyy-MM-ddThh:mm:ss"
          },
          {
            "name": "filter",
            "in": "path",
            "description": "Имя фильтра. Имя атрибута в возвращаемом JSON объекте.",
            "required": false,
            "type": "string",
            "x-example": "properties.object_code"
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Временное окно для ревизий объектов слоя. Дата и время начала периода",
            "required": false,
            "type": "string",
            "format": "date-time",
            "allowEmptyValue": false,
            "x-example": "yyyy-MM-ddThh:mm:ss"
          },
          {
            "name": "value",
            "in": "path",
            "description": "Значение фильтра. Значение атрибута в возвращаемом JSON объекте.",
            "required": false,
            "type": "string",
            "x-example": "01210"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/generate/{dimension}": {
      "get": {
        "tags": [
          "generator-controller"
        ],
        "summary": "generate",
        "operationId": "generateUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "dimension",
            "in": "path",
            "description": "dimension",
            "required": true,
            "type": "string"
          },
          {
            "name": "season",
            "in": "path",
            "description": "season",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/generate/{dimension}/{season}": {
      "get": {
        "tags": [
          "generator-controller"
        ],
        "summary": "generate",
        "operationId": "generateUsingGET_1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "dimension",
            "in": "path",
            "description": "dimension",
            "required": true,
            "type": "string"
          },
          {
            "name": "season",
            "in": "path",
            "description": "season",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/graphics/areaChart": {
      "get": {
        "tags": [
          "graphics-controller"
        ],
        "summary": "Запрос на получение данных для 2х графиков нарушений: Контроля жителей и Контроля города за период времени",
        "description": "Метод позволяет получить данных для 2х графиков нарушений: Контроль жителями и Контроль города за период времени",
        "operationId": "areaChartUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "cache",
            "in": "header",
            "description": "cache",
            "required": false,
            "type": "string"
          },
          {
            "name": "dimension",
            "in": "query",
            "description": "Список слоёв",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "allowEmptyValue": false
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Дата и время конца периода",
            "required": false,
            "type": "string",
            "format": "date-time",
            "allowEmptyValue": false,
            "x-example": "2019-11-11T21:00:00"
          },
          {
            "name": "season",
            "in": "query",
            "description": "Сезон",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "default": "winter,all",
            "allowEmptyValue": false
          },
          {
            "name": "sourceSystems",
            "in": "query",
            "description": "Список систем",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "allowEmptyValue": false
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Дата и время начала периода",
            "required": false,
            "type": "string",
            "format": "date-time",
            "allowEmptyValue": false,
            "x-example": "2019-11-10T21:00:00"
          },
          {
            "name": "violationType",
            "in": "query",
            "description": "Тип нарушения",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "default": "CRT,CMN",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestResult«GraphicsDTO»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/graphics/circleChart": {
      "get": {
        "tags": [
          "graphics-controller"
        ],
        "summary": "circleChart",
        "operationId": "circleChartUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "cache",
            "in": "header",
            "description": "cache",
            "required": false,
            "type": "string"
          },
          {
            "name": "dimension",
            "in": "query",
            "description": "Список слоёв",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "allowEmptyValue": false
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "endDate",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "season",
            "in": "query",
            "description": "Сезон",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "default": "winter,all",
            "allowEmptyValue": false
          },
          {
            "name": "sourceSystems",
            "in": "query",
            "description": "Список систем",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "allowEmptyValue": false
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "startDate",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "violationType",
            "in": "query",
            "description": "Тип нарушения",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "default": "CRT,CMN",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestResult«GraphicsDTO»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/graphics/varChart": {
      "get": {
        "tags": [
          "graphics-controller"
        ],
        "summary": "chart",
        "operationId": "chartUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "cache",
            "in": "header",
            "description": "cache",
            "required": false,
            "type": "string"
          },
          {
            "name": "dimension",
            "in": "query",
            "description": "Список слоёв",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "allowEmptyValue": false
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "endDate",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "season",
            "in": "query",
            "description": "Сезон",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "default": "winter,all",
            "allowEmptyValue": false
          },
          {
            "name": "sourceSystems",
            "in": "query",
            "description": "Список систем",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "allowEmptyValue": false
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "startDate",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "violationType",
            "in": "query",
            "description": "Тип нарушения",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "default": "CRT,CMN",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestResult«GraphicsDTO»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/incident/all": {
      "post": {
        "tags": [
          "layer-incident-controller"
        ],
        "summary": "violationsOfDimension",
        "operationId": "violationsOfDimensionUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "endDate",
            "in": "query",
            "description": "endDate",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": false,
            "schema": {
              "$ref": "#/definitions/WidgetFilter"
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Сезон",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "default": "winter,all",
            "allowEmptyValue": false
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "startDate",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "theme",
            "in": "query",
            "description": "theme",
            "required": false,
            "type": "string",
            "default": "light"
          },
          {
            "name": "usePeriod",
            "in": "query",
            "description": "Использовать период",
            "required": false,
            "type": "boolean",
            "default": false,
            "allowEmptyValue": false,
            "x-example": true
          },
          {
            "name": "violationType",
            "in": "query",
            "description": "Тип нарушения",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "default": "CRT,CMN",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestResult«LayerObjectInfoDTO»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/incident/feature": {
      "post": {
        "tags": [
          "layer-incident-controller"
        ],
        "summary": "incidentOfFeature",
        "operationId": "incidentOfFeatureUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "alias",
            "in": "query",
            "description": "Алиас слоя",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "endDate",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "featureId",
            "in": "query",
            "description": "Идентификатор объекта",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": false,
            "schema": {
              "$ref": "#/definitions/WidgetFilter"
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Сезон",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "default": "winter,all",
            "allowEmptyValue": false
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "startDate",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "theme",
            "in": "query",
            "description": "theme",
            "required": false,
            "type": "string",
            "default": "light"
          },
          {
            "name": "usePeriod",
            "in": "query",
            "description": "Использовать период",
            "required": false,
            "type": "boolean",
            "default": false,
            "allowEmptyValue": false,
            "x-example": true
          },
          {
            "name": "violationType",
            "in": "query",
            "description": "Тип нарушения",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "default": "CRT,CMN",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestResult«LayerSingleObjectDTO»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/info/report": {
      "get": {
        "tags": [
          "report-info-controller"
        ],
        "summary": "Запрос на получение отчетной информации.",
        "description": "Метод позволяет получить отчетную информацию.",
        "operationId": "getReportUsingGET_1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "description": "date",
            "required": true,
            "type": "string",
            "format": "date"
          },
          {
            "name": "dimension",
            "in": "query",
            "description": "dimension",
            "required": false,
            "type": "string"
          },
          {
            "name": "season",
            "in": "query",
            "description": "season",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "type",
            "required": false,
            "type": "string",
            "default": "FRONT"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestResult«ReportInfoDTO»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/layers": {
      "get": {
        "tags": [
          "layers-controller"
        ],
        "summary": "Запрос на получение данных по слоям-срезам, таким как слои ДТ/МКД/ОДХ/ТПУ и пр.",
        "description": "Метод позволяет получить информацию по слоям-срезам, таким как слои ДТ/МКД/ОДХ/ТПУ",
        "operationId": "layersUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "cache",
            "in": "header",
            "description": "cache",
            "required": false,
            "type": "string"
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Временное окно для ревизий объектов слоя. Дата и время окончания периода",
            "required": false,
            "type": "string",
            "format": "date-time",
            "allowEmptyValue": false,
            "x-example": "yyyy-MM-ddThh:mm:ss"
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Временное окно для ревизий объектов слоя. Дата и время начала периода",
            "required": false,
            "type": "string",
            "format": "date-time",
            "allowEmptyValue": false,
            "x-example": "yyyy-MM-ddThh:mm:ss"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/layers/geometry": {
      "get": {
        "tags": [
          "layers-controller"
        ],
        "summary": "Запрос на получение данных по геометрическим слоям, таким как слои городов/округов/районов и пр.",
        "description": "Метод позволяет получить информацию по геометрическим слоям, таким как слои городов/округов/районов",
        "operationId": "layersGeometryUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "cache",
            "in": "header",
            "description": "cache",
            "required": false,
            "type": "string"
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Временное окно для ревизий объектов слоя. Дата и время окончания периода",
            "required": false,
            "type": "string",
            "format": "date-time",
            "allowEmptyValue": false,
            "x-example": "yyyy-MM-ddThh:mm:ss"
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Временное окно для ревизий объектов слоя. Дата и время начала периода",
            "required": false,
            "type": "string",
            "format": "date-time",
            "allowEmptyValue": false,
            "x-example": "yyyy-MM-ddThh:mm:ss"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/legend/{alias}": {
      "get": {
        "tags": [
          "legend-controller"
        ],
        "summary": "Легенда цветового заполнения карты с указанием сезона",
        "description": "Метод выводит легенду цветового заполнения карты по сезону",
        "operationId": "legendUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "alias",
            "in": "path",
            "description": "Административный уровень",
            "required": false,
            "type": "string"
          },
          {
            "name": "cache",
            "in": "header",
            "description": "cache",
            "required": false,
            "type": "string"
          },
          {
            "name": "season",
            "in": "path",
            "description": "Сезон",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestResult«List«LegendDTO»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/legend/{alias}/{season}": {
      "get": {
        "tags": [
          "legend-controller"
        ],
        "summary": "Легенда цветового заполнения карты с указанием сезона",
        "description": "Метод выводит легенду цветового заполнения карты по сезону",
        "operationId": "legendUsingGET_1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "alias",
            "in": "path",
            "description": "Административный уровень",
            "required": false,
            "type": "string"
          },
          {
            "name": "cache",
            "in": "header",
            "description": "cache",
            "required": false,
            "type": "string"
          },
          {
            "name": "season",
            "in": "path",
            "description": "Сезон",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestResult«List«LegendDTO»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/legends": {
      "get": {
        "tags": [
          "legend-controller"
        ],
        "summary": "Легенда цветового заполнения карты",
        "description": "Метод выводит легенду цветового заполнения карты",
        "operationId": "legendsUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "paged",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "sort.sorted",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "sort.unsorted",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "unpaged",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestResult«PageResult«LegendEditingDTO»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/legends/level_type": {
      "get": {
        "tags": [
          "legend-controller"
        ],
        "summary": "Получение описания к полю level",
        "description": "Метод позволяет получить описание к полю level",
        "operationId": "getLayerTypesUsingGET_1",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestResult«Map«string,string»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/legends/save": {
      "post": {
        "tags": [
          "legend-controller"
        ],
        "summary": "Метод добавления/изменения легенды",
        "description": "Метод добавляет/изменяет легенду",
        "operationId": "saveLegendUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "legend",
            "description": "Легенда",
            "required": false,
            "schema": {
              "$ref": "#/definitions/LegendEditingDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestResult«LegendEditingDTO»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/legends/season_type": {
      "get": {
        "tags": [
          "legend-controller"
        ],
        "summary": "Получение описания к полю season",
        "description": "Метод позволяет получить описание к полю season",
        "operationId": "getSeasonTypesUsingGET",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestResult«Map«string,string»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/legends/{id}": {
      "delete": {
        "tags": [
          "legend-controller"
        ],
        "summary": "Метод удаления легенды по ID",
        "description": "Метод позволяет удалить легенду по её идентификатору",
        "operationId": "deleteLegendUsingDELETE",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор легенды",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/mappings/{alias}": {
      "get": {
        "tags": [
          "mappings-controller"
        ],
        "summary": "Запрос на получение струтуры семантики объектов заданного слоя",
        "description": "Метод позволяет получить информацию по струтуре семантики объектов заданного слоя",
        "operationId": "mappingsUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "alias",
            "in": "path",
            "description": "Alias слоя. Используется в формировании URL.",
            "required": false,
            "type": "string",
            "x-example": "<uri>/mappings/moscow.russia или <uri>/mappings/mkd"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/property": {
      "get": {
        "tags": [
          "property-controller"
        ],
        "summary": "Получение настроек",
        "description": "Метод позволяет получить настройки для фронта",
        "operationId": "getPropertiesUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "types",
            "in": "query",
            "description": "types",
            "required": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "CAMERA",
                "DASHBOARD"
              ]
            },
            "collectionFormat": "multi",
            "enum": [
              "CAMERA",
              "DASHBOARD"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestResult«string»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "property-controller"
        ],
        "summary": "Изменение настроек",
        "description": "Метод позволяет изменить значение настроек",
        "operationId": "savePropertyValueUsingPATCH",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "property",
            "description": "Измененная настройка",
            "required": false,
            "schema": {
              "$ref": "#/definitions/KeyPropertyDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestResult«string»"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/property/types": {
      "get": {
        "tags": [
          "property-controller"
        ],
        "summary": "Получение групп типов настроек",
        "description": "Метод позволяет получить типы групп настроек",
        "operationId": "getTypesUsingGET",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestResult«string»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/report/get": {
      "get": {
        "tags": [
          "report-controller"
        ],
        "summary": "Получение ссылки на отчёт",
        "description": "Метод выдаёт ссылку на файл отчёта по его типу и дате",
        "operationId": "getReportUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "description": "Дата отчёта",
            "required": false,
            "type": "string",
            "format": "date",
            "allowEmptyValue": false,
            "x-example": "yyyy-MM-dd"
          },
          {
            "name": "type",
            "in": "query",
            "description": "Тип отчёта",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestResult«string»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/report/instruction": {
      "get": {
        "tags": [
          "report-controller"
        ],
        "summary": "Получение Инструкции",
        "description": "Метод отдает ID последней загруженной инструкции",
        "operationId": "getInstructionUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestResult«string»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/report/isExists": {
      "get": {
        "tags": [
          "report-controller"
        ],
        "summary": "Проверка существования отчёта",
        "description": "Метод проверяет, существует ли ссылка на файл отчёта по его типу и дате",
        "operationId": "isExistsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "description": "Дата отчёта",
            "required": false,
            "type": "string",
            "format": "date",
            "allowEmptyValue": false,
            "x-example": "yyyy-MM-dd"
          },
          {
            "name": "type",
            "in": "query",
            "description": "Тип отчёта",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestResult«boolean»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/report/save": {
      "post": {
        "tags": [
          "report-controller"
        ],
        "summary": "Сохранение ссылки на отчёт",
        "description": "Метод сохраняет ссылку на  файл отчёта",
        "operationId": "saveReportUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "reportDTO",
            "description": "Дата, имя и ссылка на файл отчёта",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ReportDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/report/saveToFile": {
      "get": {
        "tags": [
          "report-file-controller"
        ],
        "summary": "Сохранение отчёта в файл",
        "description": "Метод получает отчёт и сохраняет в файл",
        "operationId": "reportAsFileUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "description": "date",
            "required": true,
            "type": "string",
            "format": "date"
          },
          {
            "name": "dimension",
            "in": "query",
            "description": "dimension",
            "required": false,
            "type": "string"
          },
          {
            "name": "majorPrefectType",
            "in": "query",
            "description": "majorPrefectType",
            "required": false,
            "type": "string"
          },
          {
            "name": "season",
            "in": "query",
            "description": "season",
            "required": false,
            "type": "string"
          },
          {
            "name": "weekDayTpe",
            "in": "query",
            "description": "weekDayTpe",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string",
              "format": "byte"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/report/types": {
      "get": {
        "tags": [
          "report-controller"
        ],
        "summary": "Получение ссылки на отчёт",
        "description": "Метод выдаёт ссылку на файл отчёта по его типу и дате",
        "operationId": "getTypesUsingGET_1",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestResult«HashMap«string,string»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/reset/all": {
      "get": {
        "tags": [
          "caches-controller"
        ],
        "summary": "Запрос на сброс всех кэшей приложения и обновления тех из них, что построены на кэшировании специальных данных из БД",
        "description": "Метод позволяет заставить приложение обновить внутреннее состояние без перезагрузки такового",
        "operationId": "resetUsingGET",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/reset/cache": {
      "get": {
        "tags": [
          "caches-controller"
        ],
        "summary": "Запрос на сброс кэша ответов сервисов (response cache)",
        "description": "Метод позволяет сбросить кэш ответов сервисов (response cache)",
        "operationId": "resetCacheUsingGET",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/reset/layers": {
      "get": {
        "tags": [
          "caches-controller"
        ],
        "summary": "Запрос на сброс кэша метаданных слоев (layers metadata cache)",
        "description": "Метод позволяет сбросить кэш метаданных слоев (layers metadata cache)",
        "operationId": "resetLayersUsingGET",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/reset/meta": {
      "get": {
        "tags": [
          "caches-controller"
        ],
        "summary": "Запрос на сброс кэша метакарт (layers metadata metamap cache)",
        "description": "Метод позволяет сбросить кэш метакарт (layers metadata metamap cache)",
        "operationId": "resetMetaUsingGET",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/reset/queries": {
      "get": {
        "tags": [
          "caches-controller"
        ],
        "summary": "Запрос на сброс кэша SQL запросов (SQL queries cache)",
        "description": "Метод позволяет сбросить кэш SQL запросов (SQL queries cache)",
        "operationId": "resetQueriesUsingGET",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/security_journal": {
      "get": {
        "tags": [
          "security-journal-output-controller"
        ],
        "summary": "Выдача журнала посещений в csv",
        "description": "Метод получает журнал посещений и сохраняет в файл csv",
        "operationId": "journalAsCSVUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "filter",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "string"
          },
          {
            "name": "size",
            "in": "query",
            "description": "size",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/system_type": {
      "get": {
        "tags": [
          "system-type-controller"
        ],
        "summary": "Получение списка доступных систем для фильтрации",
        "operationId": "getSystemTypesUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "group",
            "in": "query",
            "description": "group",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "default": "CITIZEN,GOVERNMENT"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestResult«string»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/ts/info": {
      "get": {
        "tags": [
          "ts-info-controller"
        ],
        "summary": "getTsInfoByType",
        "operationId": "getTsInfoByTypeUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Тип справочника",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestResult«List«TsInfoDTO»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/violations/card": {
      "get": {
        "tags": [
          "violations-controller"
        ],
        "summary": "Запрос на получение данных по карточке нарушения с фото и видео",
        "description": "Метод позволяет получить информацию о нарушении с фото\\видеофиксацией",
        "operationId": "getCardViolationUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "ID",
            "in": "query",
            "description": "ID нарушения",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "x-example": "5efbf6f0-cf24-4498-bbe5-31ae6aed1c0f"
          },
          {
            "name": "system",
            "in": "query",
            "description": "система (ЦАФАП/ОАТИ/НГ)",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "x-example": "(CAFAP/OATI/NG)"
          },
          {
            "name": "ticket",
            "in": "query",
            "description": "номер тикета ЦАФАП/ОАТИ/НГ",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "x-example": "100585075"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestResult«ViolationCardDTO»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/violations/createCameraPosition": {
      "get": {
        "tags": [
          "camera-controller"
        ],
        "summary": "Запрос на создание позиции камеры",
        "description": "Метод позволяет создать позиции камеры",
        "operationId": "createCameraPositionUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cameraId",
            "in": "query",
            "description": "Идентификатор камеры",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "x-example": "404925c2-b6c6-47b8-82d0-44df918da3d4"
          },
          {
            "name": "sold",
            "in": "query",
            "description": "идентификатор типа объекта видеонаблюдения",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "system",
            "in": "query",
            "description": "тип позиции (0 - пользовательская, 1 - системная)",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "x-example": 1
          },
          {
            "name": "title",
            "in": "query",
            "description": "название для создаваемой позиции",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestResult«Map»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/violations/deleteCameraPosition": {
      "get": {
        "tags": [
          "camera-controller"
        ],
        "summary": "Запрос на удаление сохраненной позиции",
        "description": "Метод позволяет удалить сохраненную позицию",
        "operationId": "deleteCameraPositionUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "идентификатор уникальной позиции",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "x-example": "404925c2-b6c6-47b8-82d0-44df918da3d4"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestResult«Map»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/violations/dimension/{dimension}/{alias}/{filter}/{value}": {
      "get": {
        "tags": [
          "violations-controller"
        ],
        "summary": "Запрос на получение данных по нарушениям на объектах заданного разреза по районам",
        "description": "Метод позволяет получить информацию по нарушениям на объектах заданного разреза по районам",
        "operationId": "violationsOfDimensionUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "alias",
            "in": "path",
            "description": "Alias слоя района. Используется в формировании URL.",
            "required": false,
            "type": "string",
            "x-example": "<uri>/violations/dimension/mkd/districts.regions.moscow.russia"
          },
          {
            "name": "cache",
            "in": "header",
            "description": "cache",
            "required": false,
            "type": "string"
          },
          {
            "name": "dimension",
            "in": "path",
            "description": "Alias слоя среза ДТ/МКД/ОДХ/ТПУ. Используется в формировании URL.",
            "required": false,
            "type": "string",
            "x-example": "<uri>/violations/dimension/mkd/districts.regions.moscow.russia"
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Временное окно для нарушений. Дата и время окончания периода",
            "required": false,
            "type": "string",
            "format": "date-time",
            "allowEmptyValue": false,
            "x-example": "yyyy-MM-ddThh:mm:ss"
          },
          {
            "name": "filter",
            "in": "path",
            "description": "Имя фильтра. Имя атрибута в возвращаемом JSON объекте.",
            "required": false,
            "type": "string",
            "x-example": "properties.object_code"
          },
          {
            "name": "role",
            "in": "query",
            "description": "Роль пользователя",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "x-example": "ROLE_DASHBORD_MER"
          },
          {
            "name": "season",
            "in": "query",
            "description": "Сезон",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "x-example": "winter"
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Временное окно для нарушений. Дата и время начала периода",
            "required": false,
            "type": "string",
            "format": "date-time",
            "allowEmptyValue": false,
            "x-example": "yyyy-MM-ddThh:mm:ss"
          },
          {
            "name": "usePeriod",
            "in": "query",
            "description": "Использовать период",
            "required": false,
            "type": "boolean",
            "default": false,
            "allowEmptyValue": false,
            "x-example": true
          },
          {
            "name": "value",
            "in": "path",
            "description": "Значение фильтра. Значение атрибута в возвращаемом JSON объекте.",
            "required": false,
            "type": "string",
            "x-example": "01210"
          },
          {
            "name": "violationSource",
            "in": "query",
            "description": "Источник нарушений",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "GOVERNMENT",
                "CITIZEN",
                "SYS",
                "ASUPR",
                "ALL"
              ]
            },
            "collectionFormat": "multi",
            "default": "GOVERNMENT,CITIZEN",
            "allowEmptyValue": false,
            "enum": [
              "GOVERNMENT",
              "CITIZEN",
              "SYS",
              "ASUPR",
              "ALL"
            ]
          },
          {
            "name": "violationSourceSystem",
            "in": "query",
            "description": "violationSourceSystem",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "violationType",
            "in": "query",
            "description": "Тип нарушения",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "default": "CRT,CMN",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/violations/get/nearby/cameras": {
      "get": {
        "tags": [
          "camera-controller"
        ],
        "summary": "Запрос на получение данных по камерам в радиусе из ЕЦХД",
        "description": "Метод позволяет получить информацию камерах в определенном радиусе из ЕЦХД",
        "operationId": "getEchdNearbyCamerasUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "lat",
            "in": "query",
            "description": "Широта",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "x-example": "55.8536627248391"
          },
          {
            "name": "lng",
            "in": "query",
            "description": "Долгота",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "x-example": "37.5021999706166"
          },
          {
            "name": "radius",
            "in": "query",
            "description": "Радиус",
            "required": false,
            "type": "integer",
            "default": 50,
            "format": "int32",
            "allowEmptyValue": false,
            "x-example": 50
          },
          {
            "name": "trash",
            "in": "query",
            "description": "Флаг того, что камера должна смотреть на мусорный контейнер",
            "required": false,
            "type": "boolean",
            "default": false,
            "allowEmptyValue": false,
            "x-example": true
          },
          {
            "name": "types",
            "in": "query",
            "description": "Типы камер",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "x-example": "Подъезды*"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestResult«EchdDataDTO»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/violations/getCameraPositions": {
      "get": {
        "tags": [
          "camera-controller"
        ],
        "summary": "Запрос на получение списка позиций камеры",
        "description": "Метод позволяет получить список позиций камеры",
        "operationId": "getCameraPositionUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Идентификатор камеры",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "x-example": "404925c2-b6c6-47b8-82d0-44df918da3d4"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestResult«Map»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/violations/getCamerasAzimuths": {
      "post": {
        "tags": [
          "camera-controller"
        ],
        "summary": "Запрос на получение азимутов камеры",
        "description": "Метод позволяет получить азимуты камеры",
        "operationId": "getCamerasAzimuthsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Идентификатор камеры",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "x-example": "404925c2-b6c6-47b8-82d0-44df918da3d4"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestResult«Map»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/violations/moveCamerasToCoordinates": {
      "post": {
        "tags": [
          "camera-controller"
        ],
        "summary": "Запрос поворота нескольких камер к определенной точке",
        "description": "Метод позволяет повернуть несколько камер к определенной точке",
        "operationId": "moveCamerasToCoordinatesUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "moveCamera",
            "description": "moveCamera",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EchdMoveCamera"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestResult«Map»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/violations/moveToCameraPosition": {
      "get": {
        "tags": [
          "camera-controller"
        ],
        "summary": "Запрос на перевод камеры в сохраненную позицию",
        "description": "Метод позволяет перевести камеру в сохраненную позицию",
        "operationId": "moveToCameraPositionUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "идентификатор уникальной позиции",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "x-example": "404925c2-b6c6-47b8-82d0-44df918da3d4"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestResult«Map»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/violations/sendCameraCommand": {
      "get": {
        "tags": [
          "camera-controller"
        ],
        "summary": "sendCameraCommand",
        "operationId": "sendCameraCommandUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "command",
            "in": "query",
            "description": "command",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Идентификатор камеры",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "x-example": "404925c2-b6c6-47b8-82d0-44df918da3d4"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestResult«Map»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/violations/stream": {
      "get": {
        "tags": [
          "camera-controller"
        ],
        "summary": "Запрос на получение данных по видео потокам из ЕЦХД",
        "description": "Метод позволяет получить информацию о ссылке на поток видео из ЕЦХД",
        "operationId": "getEchdStreamDataUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cameraId",
            "in": "query",
            "description": "идентификатор камеры",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "x-example": "404925c2-b6c6-47b8-82d0-44df918da3d4"
          },
          {
            "name": "data_creation",
            "in": "query",
            "description": "Дата и время создания тикета",
            "required": false,
            "type": "string",
            "format": "date-time",
            "allowEmptyValue": false,
            "x-example": "yyyy-MM-ddThh:mm:ss"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestResult«EchdStreamDataDTO»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/violations/updateCameraPosition": {
      "post": {
        "tags": [
          "camera-controller"
        ],
        "summary": "Запрос на обновление позиции",
        "description": "Метод позволяет обновить позицию",
        "operationId": "updateCameraPositionUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "echdPosition",
            "description": "echdPosition",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EchdPosition"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "Идентификатор камеры",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "x-example": "404925c2-b6c6-47b8-82d0-44df918da3d4"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestResult«Map»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/violations/video": {
      "get": {
        "tags": [
          "camera-controller"
        ],
        "summary": "Запрос на получение данных по видео из ЕЦХД",
        "description": "Метод позволяет получить информацию о ссылке на видеоплеер из ЕЦХД",
        "operationId": "getEchdDataUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cameraId",
            "in": "query",
            "description": "идентификатор камеры",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "x-example": "404925c2-b6c6-47b8-82d0-44df918da3d4"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestResult«EchdDataDTO»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/violations/{alias}/{dimension}": {
      "get": {
        "tags": [
          "violations-controller"
        ],
        "summary": "Запрос на получение данных по нарушениям в заданном разрезе по городу/округам/районам",
        "description": "Метод позволяет получить информацию по нарушениям в заданном разрезе по городу/округам/районам",
        "operationId": "violationsUsingGET_1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "alias",
            "in": "path",
            "description": "Alias слоя города/округа/района. Используется в формировании URL.",
            "required": false,
            "type": "string",
            "x-example": "<uri>/violations/moscow.russia/mkd"
          },
          {
            "name": "cache",
            "in": "header",
            "description": "cache",
            "required": false,
            "type": "string"
          },
          {
            "name": "dimension",
            "in": "path",
            "description": "Alias слоя среза ДТ/МКД/ОДХ/ТПУ. Используется в формировании URL.",
            "required": false,
            "type": "string",
            "x-example": "<uri>/violations/moscow.russia/mkd"
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Временное окно для нарушений. Дата и время окончания периода",
            "required": false,
            "type": "string",
            "format": "date-time",
            "allowEmptyValue": false,
            "x-example": "yyyy-MM-ddThh:mm:ss"
          },
          {
            "name": "role",
            "in": "query",
            "description": "Роль пользователя",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "x-example": "ROLE_DASHBORD_MER"
          },
          {
            "name": "season",
            "in": "query",
            "description": "Сезон",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "x-example": "winter"
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Временное окно для нарушений. Дата и время начала периода",
            "required": false,
            "type": "string",
            "format": "date-time",
            "allowEmptyValue": false,
            "x-example": "yyyy-MM-ddThh:mm:ss"
          },
          {
            "name": "violationSource",
            "in": "query",
            "description": "violationSource",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "GOVERNMENT",
                "CITIZEN",
                "SYS",
                "ASUPR",
                "ALL"
              ]
            },
            "collectionFormat": "multi",
            "default": "GOVERNMENT,CITIZEN",
            "enum": [
              "GOVERNMENT",
              "CITIZEN",
              "SYS",
              "ASUPR",
              "ALL"
            ]
          },
          {
            "name": "violationSourceSystem",
            "in": "query",
            "description": "violationSourceSystem",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/violations/{alias}/{dimension}/{filter}/{value}": {
      "get": {
        "tags": [
          "violations-controller"
        ],
        "summary": "Запрос на получение данных по нарушениям в заданном разрезе по городу/округам/районам",
        "description": "Метод позволяет получить информацию по нарушениям в заданном разрезе по городу/округам/районам",
        "operationId": "violationsUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "alias",
            "in": "path",
            "description": "Alias слоя города/округа/района. Используется в формировании URL.",
            "required": false,
            "type": "string",
            "x-example": "<uri>/violations/moscow.russia/mkd"
          },
          {
            "name": "cache",
            "in": "header",
            "description": "cache",
            "required": false,
            "type": "string"
          },
          {
            "name": "dimension",
            "in": "path",
            "description": "Alias слоя среза ДТ/МКД/ОДХ/ТПУ. Используется в формировании URL.",
            "required": false,
            "type": "string",
            "x-example": "<uri>/violations/moscow.russia/mkd"
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Временное окно для нарушений. Дата и время окончания периода",
            "required": false,
            "type": "string",
            "format": "date-time",
            "allowEmptyValue": false,
            "x-example": "yyyy-MM-ddThh:mm:ss"
          },
          {
            "name": "filter",
            "in": "path",
            "description": "Имя фильтра. Имя атрибута в возвращаемом JSON объекте.",
            "required": false,
            "type": "string",
            "x-example": "properties.object_code"
          },
          {
            "name": "role",
            "in": "query",
            "description": "Роль пользователя",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "x-example": "ROLE_DASHBORD_MER"
          },
          {
            "name": "season",
            "in": "query",
            "description": "Сезон",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "x-example": "winter"
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Временное окно для нарушений. Дата и время начала периода",
            "required": false,
            "type": "string",
            "format": "date-time",
            "allowEmptyValue": false,
            "x-example": "yyyy-MM-ddThh:mm:ss"
          },
          {
            "name": "value",
            "in": "path",
            "description": "Значение фильтра. Значение атрибута в возвращаемом JSON объекте.",
            "required": false,
            "type": "string",
            "x-example": "01210"
          },
          {
            "name": "violationSource",
            "in": "query",
            "description": "violationSource",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "GOVERNMENT",
                "CITIZEN",
                "SYS",
                "ASUPR",
                "ALL"
              ]
            },
            "collectionFormat": "multi",
            "default": "GOVERNMENT,CITIZEN",
            "enum": [
              "GOVERNMENT",
              "CITIZEN",
              "SYS",
              "ASUPR",
              "ALL"
            ]
          },
          {
            "name": "violationSourceSystem",
            "in": "query",
            "description": "violationSourceSystem",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/weather": {
      "get": {
        "tags": [
          "weather-controller"
        ],
        "summary": "Запрос на получение данных о погоде",
        "description": "Метод позволяет запросить данные о погоде",
        "operationId": "getWeatherUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "description": "Дата прогноза",
            "required": false,
            "type": "string",
            "format": "date",
            "allowEmptyValue": false,
            "x-example": "yyyy-MM-dd"
          },
          {
            "name": "feature_id",
            "in": "query",
            "description": "Код административной единицы",
            "required": false,
            "type": "integer",
            "format": "int64",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestResult«string»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/widget": {
      "post": {
        "tags": [
          "widget-controller"
        ],
        "summary": "widgetByType",
        "operationId": "widgetByTypeUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "endDate",
            "in": "query",
            "description": "endDate",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": false,
            "schema": {
              "$ref": "#/definitions/WidgetFilter"
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Сезон",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "default": "winter,all",
            "allowEmptyValue": false
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "startDate",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "theme",
            "in": "query",
            "description": "theme",
            "required": false,
            "type": "string",
            "default": "light"
          },
          {
            "name": "type",
            "in": "query",
            "description": "Тип виджета",
            "required": false,
            "type": "string",
            "default": "LAYERS",
            "allowEmptyValue": false,
            "x-example": "LAYERS",
            "enum": [
              "SOURCE",
              "LAYERS",
              "EVENTS",
              "DEFECTS",
              "SOURCE_GROUPS",
              "REGIONS",
              "DISTRICTS"
            ]
          },
          {
            "name": "usePeriod",
            "in": "query",
            "description": "Использовать период",
            "required": false,
            "type": "boolean",
            "default": false,
            "allowEmptyValue": false,
            "x-example": true
          },
          {
            "name": "violationType",
            "in": "query",
            "description": "Тип нарушения",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "default": "CRT, CMN",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestResult«List«WidgetElement»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/widget/all": {
      "post": {
        "tags": [
          "widget-controller"
        ],
        "summary": "sourceWidget",
        "operationId": "sourceWidgetUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "endDate",
            "in": "query",
            "description": "endDate",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": false,
            "schema": {
              "$ref": "#/definitions/WidgetFilter"
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Сезон",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "default": "winter,all",
            "allowEmptyValue": false
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "startDate",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "theme",
            "in": "query",
            "description": "theme",
            "required": false,
            "type": "string",
            "default": "light"
          },
          {
            "name": "usePeriod",
            "in": "query",
            "description": "Использовать период",
            "required": false,
            "type": "boolean",
            "default": false,
            "allowEmptyValue": false,
            "x-example": true
          },
          {
            "name": "violationType",
            "in": "query",
            "description": "Тип нарушения",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "default": "CRT, CMN",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestResult«WidgetFilter»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/widget/forTable": {
      "post": {
        "tags": [
          "table-controller"
        ],
        "summary": "forTable",
        "operationId": "forTableUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "endDate",
            "in": "query",
            "description": "endDate",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Порядок сортировки",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": false,
            "schema": {
              "$ref": "#/definitions/WidgetFilter"
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Сезон",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "default": "winter,all",
            "allowEmptyValue": false
          },
          {
            "name": "size",
            "in": "query",
            "description": "Размер страницы",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Страница",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "sortingOrder",
            "in": "query",
            "description": "По какому столбцу сортировать",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "startDate",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "usePeriod",
            "in": "query",
            "description": "Использовать период",
            "required": false,
            "type": "boolean",
            "default": false,
            "allowEmptyValue": false,
            "x-example": true
          },
          {
            "name": "violationType",
            "in": "query",
            "description": "Тип нарушения",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "default": "CRT, CMN",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestResult«PageResult«ObjectForTableDTO»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/widget/initial/filters": {
      "get": {
        "tags": [
          "widget-controller"
        ],
        "summary": "getActiveFilters",
        "operationId": "getActiveFiltersUsingGET",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestResult«WidgetFilter»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/widget/tableInExcel": {
      "get": {
        "tags": [
          "table-controller"
        ],
        "summary": "Выдача таблицы в xlsx",
        "description": "Метод выводит таблицу в формате xlsx",
        "operationId": "tableInExcelUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "endDate",
            "in": "query",
            "description": "endDate",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Порядок сортировки",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": false,
            "schema": {
              "$ref": "#/definitions/WidgetFilter"
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Сезон",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "default": "winter,all",
            "allowEmptyValue": false
          },
          {
            "name": "size",
            "in": "query",
            "description": "Размер страницы",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Страница",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "sortingOrder",
            "in": "query",
            "description": "По какому столбцу сортировать",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "startDate",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "usePeriod",
            "in": "query",
            "description": "Использовать период",
            "required": false,
            "type": "boolean",
            "default": false,
            "allowEmptyValue": false,
            "x-example": true
          },
          {
            "name": "violationType",
            "in": "query",
            "description": "Тип нарушения",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "default": "CRT, CMN",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "head": {
        "tags": [
          "table-controller"
        ],
        "summary": "Выдача таблицы в xlsx",
        "description": "Метод выводит таблицу в формате xlsx",
        "operationId": "tableInExcelUsingHEAD",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "endDate",
            "in": "query",
            "description": "endDate",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Порядок сортировки",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": false,
            "schema": {
              "$ref": "#/definitions/WidgetFilter"
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Сезон",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "default": "winter,all",
            "allowEmptyValue": false
          },
          {
            "name": "size",
            "in": "query",
            "description": "Размер страницы",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Страница",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "sortingOrder",
            "in": "query",
            "description": "По какому столбцу сортировать",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "startDate",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "usePeriod",
            "in": "query",
            "description": "Использовать период",
            "required": false,
            "type": "boolean",
            "default": false,
            "allowEmptyValue": false,
            "x-example": true
          },
          {
            "name": "violationType",
            "in": "query",
            "description": "Тип нарушения",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "default": "CRT, CMN",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "table-controller"
        ],
        "summary": "Выдача таблицы в xlsx",
        "description": "Метод выводит таблицу в формате xlsx",
        "operationId": "tableInExcelUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "endDate",
            "in": "query",
            "description": "endDate",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Порядок сортировки",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": false,
            "schema": {
              "$ref": "#/definitions/WidgetFilter"
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Сезон",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "default": "winter,all",
            "allowEmptyValue": false
          },
          {
            "name": "size",
            "in": "query",
            "description": "Размер страницы",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Страница",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "sortingOrder",
            "in": "query",
            "description": "По какому столбцу сортировать",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "startDate",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "usePeriod",
            "in": "query",
            "description": "Использовать период",
            "required": false,
            "type": "boolean",
            "default": false,
            "allowEmptyValue": false,
            "x-example": true
          },
          {
            "name": "violationType",
            "in": "query",
            "description": "Тип нарушения",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "default": "CRT, CMN",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "table-controller"
        ],
        "summary": "Выдача таблицы в xlsx",
        "description": "Метод выводит таблицу в формате xlsx",
        "operationId": "tableInExcelUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "endDate",
            "in": "query",
            "description": "endDate",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Порядок сортировки",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": false,
            "schema": {
              "$ref": "#/definitions/WidgetFilter"
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Сезон",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "default": "winter,all",
            "allowEmptyValue": false
          },
          {
            "name": "size",
            "in": "query",
            "description": "Размер страницы",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Страница",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "sortingOrder",
            "in": "query",
            "description": "По какому столбцу сортировать",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "startDate",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "usePeriod",
            "in": "query",
            "description": "Использовать период",
            "required": false,
            "type": "boolean",
            "default": false,
            "allowEmptyValue": false,
            "x-example": true
          },
          {
            "name": "violationType",
            "in": "query",
            "description": "Тип нарушения",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "default": "CRT, CMN",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "table-controller"
        ],
        "summary": "Выдача таблицы в xlsx",
        "description": "Метод выводит таблицу в формате xlsx",
        "operationId": "tableInExcelUsingDELETE",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "endDate",
            "in": "query",
            "description": "endDate",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Порядок сортировки",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": false,
            "schema": {
              "$ref": "#/definitions/WidgetFilter"
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Сезон",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "default": "winter,all",
            "allowEmptyValue": false
          },
          {
            "name": "size",
            "in": "query",
            "description": "Размер страницы",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Страница",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "sortingOrder",
            "in": "query",
            "description": "По какому столбцу сортировать",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "startDate",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "usePeriod",
            "in": "query",
            "description": "Использовать период",
            "required": false,
            "type": "boolean",
            "default": false,
            "allowEmptyValue": false,
            "x-example": true
          },
          {
            "name": "violationType",
            "in": "query",
            "description": "Тип нарушения",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "default": "CRT, CMN",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      },
      "options": {
        "tags": [
          "table-controller"
        ],
        "summary": "Выдача таблицы в xlsx",
        "description": "Метод выводит таблицу в формате xlsx",
        "operationId": "tableInExcelUsingOPTIONS",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "endDate",
            "in": "query",
            "description": "endDate",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Порядок сортировки",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": false,
            "schema": {
              "$ref": "#/definitions/WidgetFilter"
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Сезон",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "default": "winter,all",
            "allowEmptyValue": false
          },
          {
            "name": "size",
            "in": "query",
            "description": "Размер страницы",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Страница",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "sortingOrder",
            "in": "query",
            "description": "По какому столбцу сортировать",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "startDate",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "usePeriod",
            "in": "query",
            "description": "Использовать период",
            "required": false,
            "type": "boolean",
            "default": false,
            "allowEmptyValue": false,
            "x-example": true
          },
          {
            "name": "violationType",
            "in": "query",
            "description": "Тип нарушения",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "default": "CRT, CMN",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "table-controller"
        ],
        "summary": "Выдача таблицы в xlsx",
        "description": "Метод выводит таблицу в формате xlsx",
        "operationId": "tableInExcelUsingPATCH",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "endDate",
            "in": "query",
            "description": "endDate",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Порядок сортировки",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": false,
            "schema": {
              "$ref": "#/definitions/WidgetFilter"
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Сезон",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "default": "winter,all",
            "allowEmptyValue": false
          },
          {
            "name": "size",
            "in": "query",
            "description": "Размер страницы",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Страница",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "sortingOrder",
            "in": "query",
            "description": "По какому столбцу сортировать",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "startDate",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "usePeriod",
            "in": "query",
            "description": "Использовать период",
            "required": false,
            "type": "boolean",
            "default": false,
            "allowEmptyValue": false,
            "x-example": true
          },
          {
            "name": "violationType",
            "in": "query",
            "description": "Тип нарушения",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "default": "CRT, CMN",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/dashboard/winter/snow/{dimension}/feature_id/{featureId}": {
      "get": {
        "tags": [
          "winter-controller"
        ],
        "summary": "Запрос на получение данных по снежному покрову в заданном разрезе по округам/районам",
        "operationId": "snowStatUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "description": "Дата прогноза",
            "required": false,
            "type": "string",
            "format": "date",
            "allowEmptyValue": false,
            "x-example": "yyyy-MM-dd"
          },
          {
            "name": "dimension",
            "in": "path",
            "description": "Alias слоя.",
            "required": false,
            "type": "string",
            "x-example": "region.moscow.russia"
          },
          {
            "name": "featureId",
            "in": "path",
            "description": "featureId округа/района.",
            "required": false,
            "type": "string",
            "x-example": "01210"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestResult«string»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/error": {
      "get": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "errorHtml",
        "operationId": "errorHtmlUsingGET",
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "head": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "errorHtml",
        "operationId": "errorHtmlUsingHEAD",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "errorHtml",
        "operationId": "errorHtmlUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "errorHtml",
        "operationId": "errorHtmlUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "errorHtml",
        "operationId": "errorHtmlUsingDELETE",
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      },
      "options": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "errorHtml",
        "operationId": "errorHtmlUsingOPTIONS",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "errorHtml",
        "operationId": "errorHtmlUsingPATCH",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    }
  },
  "definitions": {
    "ActiveFilterDTO": {
      "type": "object",
      "properties": {
        "active": {
          "type": "boolean",
          "description": "Актывный ли фильтр по умолчанию"
        },
        "code": {
          "type": "string",
          "description": "Код записи"
        },
        "deleted": {
          "type": "boolean",
          "description": "Помечен ли фильтр как не используемый"
        },
        "groupId": {
          "type": "string",
          "description": "Идентификатор группы фильтров",
          "enum": [
            "SOURCE",
            "REGIONS",
            "LAYERS",
            "DEFECTS",
            "EVENTS",
            "SOURCE_GROUPS",
            "DISTRICTS"
          ]
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Идентификатор записи"
        },
        "name": {
          "type": "string",
          "description": "Наименования"
        }
      },
      "title": "ActiveFilterDTO"
    },
    "ChartObject": {
      "type": "object",
      "title": "ChartObject",
      "description": "Модель графиков"
    },
    "DashletDTO": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "format": "date",
          "description": "Дата"
        },
        "info": {
          "type": "array",
          "description": "Информация для дашлета",
          "items": {
            "$ref": "#/definitions/DashletInfoDTO"
          }
        }
      },
      "title": "DashletDTO",
      "description": "Информация для дашлета"
    },
    "DashletInfoDTO": {
      "type": "object",
      "properties": {
        "children": {
          "type": "array",
          "description": "Дочерние объекты",
          "items": {
            "$ref": "#/definitions/DashletInfoDTO"
          }
        },
        "color": {
          "type": "string",
          "description": "Цвет"
        },
        "percent": {
          "type": "number",
          "description": "Процент"
        },
        "title": {
          "type": "string",
          "description": "Описание"
        },
        "type": {
          "type": "string",
          "description": "Тип"
        },
        "value": {
          "type": "number",
          "description": "Значение"
        }
      },
      "title": "DashletInfoDTO",
      "description": "Объект дашлета"
    },
    "EchdDataDTO": {
      "type": "object",
      "properties": {
        "urlEmbedPlayer": {
          "type": "string",
          "description": "Ссылка на внутрений плеер с архивным потоком ЕЦХД"
        },
        "urlEmbedPlayerArchive": {
          "type": "string",
          "description": "Ссылка на внутрений плеер с архивным потоком ЕЦХД"
        },
        "urlEmbedPlayerLive": {
          "type": "string",
          "description": "Ссылка на внутрений плеер с потоком ЕЦХД"
        }
      },
      "title": "EchdDataDTO",
      "description": "Данные с ссылкой на плеер ЕЦХД"
    },
    "EchdMoveCamera": {
      "type": "object",
      "properties": {
        "cameraIds": {
          "type": "array",
          "description": "Список идентификаторов камер",
          "items": {
            "type": "string"
          }
        },
        "lat": {
          "type": "number",
          "description": "Широта"
        },
        "lng": {
          "type": "number",
          "description": "Долгота"
        }
      },
      "title": "EchdMoveCamera",
      "description": "объект для запроса поворота камер."
    },
    "EchdPosition": {
      "type": "object",
      "properties": {
        "accessLevel": {
          "type": "string",
          "description": "в качестве accessLevel в строке передается значение EveryOne"
        },
        "positionId": {
          "type": "string",
          "description": "Идентификатор позиции"
        },
        "surveillanceObjectId": {
          "type": "string",
          "description": "Идентификатор объекта наблюдения"
        },
        "title": {
          "type": "string",
          "description": "Название позиции"
        }
      },
      "title": "EchdPosition"
    },
    "EchdStreamDataDTO": {
      "type": "object",
      "properties": {
        "expired": {
          "type": "string",
          "format": "date-time",
          "description": "Время до которого будет работать ссылка на поток"
        },
        "urlControlStreamLive": {
          "type": "string",
          "description": "Ссылка на управление live потоком видео с ЕЦХД"
        },
        "urlControlStreamLiveList": {
          "type": "array",
          "description": "Массив ссылок на управление live потоком видео с ЕЦХД",
          "items": {
            "type": "string"
          }
        },
        "urlStreamArchive": {
          "type": "string",
          "description": "Ссылка на архивный поток видео с ЕЦХД"
        },
        "urlStreamArchiveAndroid": {
          "type": "string",
          "description": "Ссылка на управление android архивным потоком видео с ЕЦХД"
        },
        "urlStreamArchiveAndroidList": {
          "type": "array",
          "description": "Массив ссылок на управление android архивным потоком видео с ЕЦХД",
          "items": {
            "type": "string"
          }
        },
        "urlStreamArchiveIOS": {
          "type": "string",
          "description": "Ссылка на управление IOS архивным потоком видео с ЕЦХД"
        },
        "urlStreamArchiveIOSList": {
          "type": "array",
          "description": "Массив ссылок на управление IOS архивным потоком видео с ЕЦХД",
          "items": {
            "type": "string"
          }
        },
        "urlStreamArchiveList": {
          "type": "array",
          "description": "Массив ссылок на архивный поток видео с ЕЦХД",
          "items": {
            "type": "string"
          }
        },
        "urlStreamLive": {
          "type": "string",
          "description": "Ссылка на live поток видео с ЕЦХД"
        },
        "urlStreamLiveAndroid": {
          "type": "string",
          "description": "Ссылка на управление android live потоком видео с ЕЦХД"
        },
        "urlStreamLiveAndroidList": {
          "type": "array",
          "description": "Массив ссылок на android live поток видео с ЕЦХД",
          "items": {
            "type": "string"
          }
        },
        "urlStreamLiveIOS": {
          "type": "string",
          "description": "Ссылка на управление IOS live потоком видео с ЕЦХД"
        },
        "urlStreamLiveIOSList": {
          "type": "array",
          "description": "Массив ссылок на IOS live поток видео с ЕЦХД",
          "items": {
            "type": "string"
          }
        },
        "urlStreamLiveList": {
          "type": "array",
          "description": "Массив ссылок на live поток видео с ЕЦХД",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "EchdStreamDataDTO",
      "description": "Данные с ссылками на потоки видео"
    },
    "FieldMappingDTO": {
      "type": "object",
      "properties": {
        "alias": {
          "type": "string",
          "description": "Алиас слоя"
        },
        "attributeId": {
          "type": "string",
          "description": "Идентификатор атрибута"
        },
        "attributeValue": {
          "type": "string",
          "description": "Значение атрибута"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "FieldMappingDTO",
      "description": "Экземпляр маппинга поля к алиасу."
    },
    "FilterSearch": {
      "type": "object",
      "properties": {
        "field": {
          "type": "string",
          "enum": [
            "ADDRESS",
            "OBJECT_ID",
            "TICKET",
            "TRASH_CONTAINERS"
          ]
        },
        "value": {
          "type": "string"
        }
      },
      "title": "FilterSearch",
      "description": "Фильтр поиска"
    },
    "GraphicsDTO": {
      "type": "object",
      "properties": {
        "allStatistics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChartObject"
          }
        },
        "charts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChartObject"
          }
        },
        "colorSchema": {
          "type": "object",
          "description": "Цветовая схема"
        }
      },
      "title": "GraphicsDTO",
      "description": "Обект с информацией для графики"
    },
    "HashMap«string,string»": {
      "type": "object",
      "title": "HashMap«string,string»",
      "additionalProperties": {
        "type": "string"
      }
    },
    "JsonNode": {
      "type": "object",
      "properties": {
        "array": {
          "type": "boolean"
        },
        "bigDecimal": {
          "type": "boolean"
        },
        "bigInteger": {
          "type": "boolean"
        },
        "binary": {
          "type": "boolean"
        },
        "boolean": {
          "type": "boolean"
        },
        "containerNode": {
          "type": "boolean"
        },
        "double": {
          "type": "boolean"
        },
        "float": {
          "type": "boolean"
        },
        "floatingPointNumber": {
          "type": "boolean"
        },
        "int": {
          "type": "boolean"
        },
        "integralNumber": {
          "type": "boolean"
        },
        "long": {
          "type": "boolean"
        },
        "missingNode": {
          "type": "boolean"
        },
        "nodeType": {
          "type": "string",
          "enum": [
            "ARRAY",
            "BINARY",
            "BOOLEAN",
            "MISSING",
            "NULL",
            "NUMBER",
            "OBJECT",
            "POJO",
            "STRING"
          ]
        },
        "null": {
          "type": "boolean"
        },
        "number": {
          "type": "boolean"
        },
        "object": {
          "type": "boolean"
        },
        "pojo": {
          "type": "boolean"
        },
        "short": {
          "type": "boolean"
        },
        "textual": {
          "type": "boolean"
        },
        "valueNode": {
          "type": "boolean"
        }
      },
      "title": "JsonNode"
    },
    "KeyPropertyDTO": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "Описание настройки"
        },
        "enabled": {
          "type": "boolean",
          "description": "Состояние настроки - ВКЛ/ВЫКЛ"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Идентификатор настройки"
        },
        "key": {
          "type": "string",
          "description": "Ключ"
        },
        "type": {
          "type": "string",
          "description": "Тип",
          "enum": [
            "CAMERA",
            "DASHBOARD"
          ]
        },
        "value": {
          "type": "string",
          "description": "Значение настройки"
        }
      },
      "title": "KeyPropertyDTO",
      "description": "Настройки"
    },
    "LayerAliasDTO": {
      "type": "object",
      "properties": {
        "alias": {
          "type": "string",
          "description": "Алиас"
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Идентификатор алиаса."
        },
        "type": {
          "type": "string",
          "description": "Тип алиаса.",
          "enum": [
            "alias",
            "dimension",
            "UNKNOWN"
          ]
        }
      },
      "title": "LayerAliasDTO",
      "description": "Данные алиаса"
    },
    "LayerDTO": {
      "type": "object",
      "properties": {
        "alias": {
          "type": "string",
          "description": "Алиас слоя"
        },
        "businessType": {
          "type": "string",
          "description": "Тип слоя",
          "enum": [
            "alias",
            "dimension",
            "UNKNOWN"
          ]
        },
        "creationDate": {
          "type": "string",
          "format": "date-time",
          "description": "Дата создания"
        },
        "description": {
          "type": "string",
          "description": "Описание слоя"
        },
        "enabled": {
          "type": "boolean",
          "description": "Активирован ли слой"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Идентификатор слоя"
        },
        "modificationDate": {
          "type": "string",
          "format": "date-time",
          "description": "Дата модифицирования"
        },
        "name": {
          "type": "string",
          "description": "Имя слоя"
        },
        "revisionId": {
          "type": "integer",
          "format": "int64",
          "description": "Ревизия данных"
        },
        "sortOrder": {
          "type": "integer",
          "format": "int32",
          "description": "Порядок сортировки"
        },
        "srcType": {
          "type": "string",
          "description": "Тип слоя"
        }
      },
      "title": "LayerDTO",
      "description": "Сущность слоя."
    },
    "LayerObjectDTO": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "integer",
          "format": "int32",
          "description": "Количество объектов c нарушениями"
        },
        "amountObject": {
          "type": "integer",
          "format": "int64",
          "description": "Количество объектов в данном разрезе"
        },
        "checkAmount": {
          "type": "integer",
          "format": "int32",
          "description": "Количество проверенных объектов"
        },
        "colorCode": {
          "type": "string",
          "description": "Код цвета"
        },
        "districtId": {
          "type": "string",
          "description": "идентификатор района"
        },
        "featureId": {
          "type": "string",
          "description": "идентификатор объекта"
        },
        "hasfotovideo": {
          "type": "boolean",
          "description": "Наличие фото/видео"
        },
        "latitude": {
          "type": "string",
          "description": "Широта"
        },
        "longitude": {
          "type": "string",
          "description": "Долгота"
        },
        "regionId": {
          "type": "string",
          "description": "идентификатор округа"
        }
      },
      "title": "LayerObjectDTO",
      "description": "Данные о объектах с нарушениями"
    },
    "LayerObjectInfoDTO": {
      "type": "object",
      "properties": {
        "objectViolations": {
          "type": "array",
          "description": "Информация по объектам карты.",
          "items": {
            "$ref": "#/definitions/LayerObjectDTO"
          }
        },
        "objects": {
          "type": "array",
          "description": "Информация по слоям объектов карты.",
          "items": {
            "$ref": "#/definitions/WidgetElement"
          }
        }
      },
      "title": "LayerObjectInfoDTO",
      "description": "Информация о карте."
    },
    "LayerSingleObjectDTO": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "description": "Адрес объекта"
        },
        "checksCount": {
          "type": "integer",
          "format": "int64",
          "description": "Количество проверок"
        },
        "districtId": {
          "type": "string",
          "description": "Идентификатор Района"
        },
        "featureId": {
          "type": "string",
          "description": "Идентификтаор объекта на карте"
        },
        "holder": {
          "type": "string",
          "description": "Баласосодержатель"
        },
        "objectId": {
          "type": "string",
          "description": "Идентификатор объекта в слое"
        },
        "regionId": {
          "type": "string",
          "description": "Идентификатор округа"
        },
        "violationCitizen": {
          "type": "integer",
          "format": "int64",
          "description": "Количество нарушений группы CITIZEN"
        },
        "violationGovernment": {
          "type": "integer",
          "format": "int64",
          "description": "Количество нарушений группы GOVERNMENT"
        },
        "violations": {
          "type": "array",
          "description": "Нарушения",
          "items": {
            "$ref": "#/definitions/ViolationInfoDTO"
          }
        },
        "violationsCount": {
          "type": "integer",
          "format": "int64",
          "description": "Количество нарушений"
        }
      },
      "title": "LayerSingleObjectDTO",
      "description": "Данные о объекте карты"
    },
    "LegendDTO": {
      "type": "object",
      "properties": {
        "color": {
          "type": "string",
          "description": "Отображаемый цвет"
        },
        "colorValue": {
          "type": "string",
          "description": "Значение цвета"
        },
        "description": {
          "type": "string",
          "description": "Легенда"
        },
        "emoji": {
          "type": "string",
          "description": "Смайлик"
        },
        "maxPercent": {
          "type": "integer",
          "format": "int32",
          "description": "Максимальный процент по записи"
        },
        "minPercent": {
          "type": "integer",
          "format": "int32",
          "description": "Минимальный процент по записи"
        },
        "theme": {
          "type": "string",
          "description": "Тема"
        }
      },
      "title": "LegendDTO",
      "description": "Легенда для карты"
    },
    "LegendEditingDTO": {
      "type": "object",
      "properties": {
        "color": {
          "type": "string",
          "description": "Отображаемый цвет"
        },
        "colorValue": {
          "type": "string",
          "description": "Значение цвета"
        },
        "description": {
          "type": "string",
          "description": "Легенда"
        },
        "emoji": {
          "type": "string",
          "description": "Смайлик"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Идентификатор легенды"
        },
        "level": {
          "type": "string",
          "description": "Уровень отображения",
          "enum": [
            "moscow.russia",
            "regions.moscow.russia",
            "districts.regions.moscow.russia",
            "report",
            "dashboard",
            "dashboard.dashlet",
            "ts",
            "UNKNOWN"
          ]
        },
        "levelDescription": {
          "type": "string",
          "description": "Описание уровня"
        },
        "maxPercent": {
          "type": "integer",
          "format": "int32",
          "description": "Максимальный процент по записи"
        },
        "minPercent": {
          "type": "integer",
          "format": "int32",
          "description": "Минимальный процент по записи"
        },
        "report": {
          "type": "boolean",
          "description": "Флаг использования цветов в Диаграммах отчёта"
        },
        "season": {
          "type": "string",
          "description": "Сезон",
          "enum": [
            "all",
            "winter",
            "SYS",
            "svod"
          ]
        },
        "seasonDescription": {
          "type": "string",
          "description": "Описание сезона"
        },
        "sortOrder": {
          "type": "integer",
          "format": "int32",
          "description": "Порядок сортировки"
        },
        "theme": {
          "type": "string",
          "description": "Тема"
        }
      },
      "title": "LegendEditingDTO",
      "description": "Легенда для карты, редактируемая"
    },
    "Link": {
      "type": "object",
      "properties": {
        "href": {
          "type": "string"
        },
        "templated": {
          "type": "boolean"
        }
      },
      "title": "Link"
    },
    "Map«string,Link»": {
      "type": "object",
      "title": "Map«string,Link»",
      "additionalProperties": {
        "$ref": "#/definitions/Link"
      }
    },
    "Map«string,string»": {
      "type": "object",
      "title": "Map«string,string»",
      "additionalProperties": {
        "type": "string"
      }
    },
    "ModelAndView": {
      "type": "object",
      "properties": {
        "empty": {
          "type": "boolean"
        },
        "model": {
          "type": "object"
        },
        "modelMap": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "reference": {
          "type": "boolean"
        },
        "status": {
          "type": "string",
          "enum": [
            "100 CONTINUE",
            "101 SWITCHING_PROTOCOLS",
            "102 PROCESSING",
            "103 CHECKPOINT",
            "200 OK",
            "201 CREATED",
            "202 ACCEPTED",
            "203 NON_AUTHORITATIVE_INFORMATION",
            "204 NO_CONTENT",
            "205 RESET_CONTENT",
            "206 PARTIAL_CONTENT",
            "207 MULTI_STATUS",
            "208 ALREADY_REPORTED",
            "226 IM_USED",
            "300 MULTIPLE_CHOICES",
            "301 MOVED_PERMANENTLY",
            "302 FOUND",
            "302 MOVED_TEMPORARILY",
            "303 SEE_OTHER",
            "304 NOT_MODIFIED",
            "305 USE_PROXY",
            "307 TEMPORARY_REDIRECT",
            "308 PERMANENT_REDIRECT",
            "400 BAD_REQUEST",
            "401 UNAUTHORIZED",
            "402 PAYMENT_REQUIRED",
            "403 FORBIDDEN",
            "404 NOT_FOUND",
            "405 METHOD_NOT_ALLOWED",
            "406 NOT_ACCEPTABLE",
            "407 PROXY_AUTHENTICATION_REQUIRED",
            "408 REQUEST_TIMEOUT",
            "409 CONFLICT",
            "410 GONE",
            "411 LENGTH_REQUIRED",
            "412 PRECONDITION_FAILED",
            "413 PAYLOAD_TOO_LARGE",
            "413 REQUEST_ENTITY_TOO_LARGE",
            "414 URI_TOO_LONG",
            "414 REQUEST_URI_TOO_LONG",
            "415 UNSUPPORTED_MEDIA_TYPE",
            "416 REQUESTED_RANGE_NOT_SATISFIABLE",
            "417 EXPECTATION_FAILED",
            "418 I_AM_A_TEAPOT",
            "419 INSUFFICIENT_SPACE_ON_RESOURCE",
            "420 METHOD_FAILURE",
            "421 DESTINATION_LOCKED",
            "422 UNPROCESSABLE_ENTITY",
            "423 LOCKED",
            "424 FAILED_DEPENDENCY",
            "426 UPGRADE_REQUIRED",
            "428 PRECONDITION_REQUIRED",
            "429 TOO_MANY_REQUESTS",
            "431 REQUEST_HEADER_FIELDS_TOO_LARGE",
            "451 UNAVAILABLE_FOR_LEGAL_REASONS",
            "500 INTERNAL_SERVER_ERROR",
            "501 NOT_IMPLEMENTED",
            "502 BAD_GATEWAY",
            "503 SERVICE_UNAVAILABLE",
            "504 GATEWAY_TIMEOUT",
            "505 HTTP_VERSION_NOT_SUPPORTED",
            "506 VARIANT_ALSO_NEGOTIATES",
            "507 INSUFFICIENT_STORAGE",
            "508 LOOP_DETECTED",
            "509 BANDWIDTH_LIMIT_EXCEEDED",
            "510 NOT_EXTENDED",
            "511 NETWORK_AUTHENTICATION_REQUIRED"
          ]
        },
        "view": {
          "$ref": "#/definitions/View"
        },
        "viewName": {
          "type": "string"
        }
      },
      "title": "ModelAndView"
    },
    "ObjectForTableDTO": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "description": "Адрес"
        },
        "defectTypes": {
          "type": "string",
          "description": "Типы (описания) нарушений"
        },
        "districtId": {
          "type": "string",
          "description": "ID района"
        },
        "districtName": {
          "type": "string",
          "description": "Наименование района"
        },
        "featureId": {
          "type": "string",
          "description": "Номер объекта (featureId)"
        },
        "hasFotoVideo": {
          "type": "boolean",
          "description": "Есть ли среди нарушений нарушение с фото/видео"
        },
        "isCritical": {
          "type": "boolean",
          "description": "Есть ли среди нарушений критичное"
        },
        "isSystematic": {
          "type": "boolean",
          "description": "Есть ли среди нарушений систематические"
        },
        "objectId": {
          "type": "string",
          "description": "Идентификатор объекта"
        },
        "objectType": {
          "type": "string",
          "description": "Тип объекта"
        },
        "objectTypeCode": {
          "type": "string",
          "description": "Сокращённое наименование типа объекта на английском"
        },
        "okrugName": {
          "type": "string",
          "description": "Наименование округа"
        },
        "ownerName": {
          "type": "string",
          "description": "Держатель объекта"
        },
        "regionId": {
          "type": "string",
          "description": "ID округа"
        },
        "source": {
          "type": "string",
          "description": "Источник контроля"
        },
        "violations": {
          "type": "array",
          "description": "Нарушения",
          "items": {
            "$ref": "#/definitions/ViolationForTableDTO"
          }
        },
        "violationsCount": {
          "type": "integer",
          "format": "int32",
          "description": "Количество нарушений"
        }
      },
      "title": "ObjectForTableDTO",
      "description": "Данные о нарушении для таблицы"
    },
    "PageResult«LayerDTO»": {
      "type": "object",
      "properties": {
        "objects": {
          "type": "array",
          "description": "Обекты страницы",
          "items": {
            "$ref": "#/definitions/LayerDTO"
          }
        },
        "pageNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Номер страницы"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "Количество элементов на странице"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64",
          "description": "Общее количество элементов"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32",
          "description": "Общее количество страниц"
        }
      },
      "title": "PageResult«LayerDTO»"
    },
    "PageResult«LegendEditingDTO»": {
      "type": "object",
      "properties": {
        "objects": {
          "type": "array",
          "description": "Обекты страницы",
          "items": {
            "$ref": "#/definitions/LegendEditingDTO"
          }
        },
        "pageNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Номер страницы"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "Количество элементов на странице"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64",
          "description": "Общее количество элементов"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32",
          "description": "Общее количество страниц"
        }
      },
      "title": "PageResult«LegendEditingDTO»"
    },
    "PageResult«ObjectForTableDTO»": {
      "type": "object",
      "properties": {
        "objects": {
          "type": "array",
          "description": "Обекты страницы",
          "items": {
            "$ref": "#/definitions/ObjectForTableDTO"
          }
        },
        "pageNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Номер страницы"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "Количество элементов на странице"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64",
          "description": "Общее количество элементов"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32",
          "description": "Общее количество страниц"
        }
      },
      "title": "PageResult«ObjectForTableDTO»"
    },
    "ReportDTO": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "description": "Ссылка на файл"
        },
        "date": {
          "type": "string",
          "description": "Дата отчёта"
        },
        "name": {
          "type": "string",
          "description": "Имя файла"
        },
        "type": {
          "type": "string",
          "description": "Тип отчёта"
        }
      },
      "title": "ReportDTO",
      "description": "Загружаемый файл отчёта "
    },
    "ReportInfoDTO": {
      "type": "object",
      "properties": {
        "colorSchema": {
          "type": "object",
          "description": "Цветовая схема"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Идентификатор отчёта"
        },
        "season": {
          "type": "string",
          "description": "Сезон"
        },
        "semantic": {
          "description": "Json отчёта",
          "$ref": "#/definitions/JsonNode"
        },
        "type": {
          "type": "string",
          "description": "Тип"
        }
      },
      "title": "ReportInfoDTO",
      "description": "Информация о отчёте"
    },
    "ResponseEntity": {
      "type": "object",
      "properties": {
        "body": {
          "type": "object"
        },
        "statusCode": {
          "type": "string",
          "enum": [
            "100 CONTINUE",
            "101 SWITCHING_PROTOCOLS",
            "102 PROCESSING",
            "103 CHECKPOINT",
            "200 OK",
            "201 CREATED",
            "202 ACCEPTED",
            "203 NON_AUTHORITATIVE_INFORMATION",
            "204 NO_CONTENT",
            "205 RESET_CONTENT",
            "206 PARTIAL_CONTENT",
            "207 MULTI_STATUS",
            "208 ALREADY_REPORTED",
            "226 IM_USED",
            "300 MULTIPLE_CHOICES",
            "301 MOVED_PERMANENTLY",
            "302 FOUND",
            "302 MOVED_TEMPORARILY",
            "303 SEE_OTHER",
            "304 NOT_MODIFIED",
            "305 USE_PROXY",
            "307 TEMPORARY_REDIRECT",
            "308 PERMANENT_REDIRECT",
            "400 BAD_REQUEST",
            "401 UNAUTHORIZED",
            "402 PAYMENT_REQUIRED",
            "403 FORBIDDEN",
            "404 NOT_FOUND",
            "405 METHOD_NOT_ALLOWED",
            "406 NOT_ACCEPTABLE",
            "407 PROXY_AUTHENTICATION_REQUIRED",
            "408 REQUEST_TIMEOUT",
            "409 CONFLICT",
            "410 GONE",
            "411 LENGTH_REQUIRED",
            "412 PRECONDITION_FAILED",
            "413 PAYLOAD_TOO_LARGE",
            "413 REQUEST_ENTITY_TOO_LARGE",
            "414 URI_TOO_LONG",
            "414 REQUEST_URI_TOO_LONG",
            "415 UNSUPPORTED_MEDIA_TYPE",
            "416 REQUESTED_RANGE_NOT_SATISFIABLE",
            "417 EXPECTATION_FAILED",
            "418 I_AM_A_TEAPOT",
            "419 INSUFFICIENT_SPACE_ON_RESOURCE",
            "420 METHOD_FAILURE",
            "421 DESTINATION_LOCKED",
            "422 UNPROCESSABLE_ENTITY",
            "423 LOCKED",
            "424 FAILED_DEPENDENCY",
            "426 UPGRADE_REQUIRED",
            "428 PRECONDITION_REQUIRED",
            "429 TOO_MANY_REQUESTS",
            "431 REQUEST_HEADER_FIELDS_TOO_LARGE",
            "451 UNAVAILABLE_FOR_LEGAL_REASONS",
            "500 INTERNAL_SERVER_ERROR",
            "501 NOT_IMPLEMENTED",
            "502 BAD_GATEWAY",
            "503 SERVICE_UNAVAILABLE",
            "504 GATEWAY_TIMEOUT",
            "505 HTTP_VERSION_NOT_SUPPORTED",
            "506 VARIANT_ALSO_NEGOTIATES",
            "507 INSUFFICIENT_STORAGE",
            "508 LOOP_DETECTED",
            "509 BANDWIDTH_LIMIT_EXCEEDED",
            "510 NOT_EXTENDED",
            "511 NETWORK_AUTHENTICATION_REQUIRED"
          ]
        },
        "statusCodeValue": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "ResponseEntity"
    },
    "RestResult": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "SUCCESS",
            "ERROR"
          ]
        },
        "data": {
          "type": "object"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "requestId": {
          "type": "string"
        },
        "responseId": {
          "type": "string"
        },
        "stackTrace": {
          "type": "string"
        },
        "synopsis": {
          "type": "string"
        }
      },
      "title": "RestResult"
    },
    "RestResult«ActiveFilterDTO»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "SUCCESS",
            "ERROR"
          ]
        },
        "data": {
          "$ref": "#/definitions/ActiveFilterDTO"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "requestId": {
          "type": "string"
        },
        "responseId": {
          "type": "string"
        },
        "stackTrace": {
          "type": "string"
        },
        "synopsis": {
          "type": "string"
        }
      },
      "title": "RestResult«ActiveFilterDTO»"
    },
    "RestResult«DashletDTO»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "SUCCESS",
            "ERROR"
          ]
        },
        "data": {
          "$ref": "#/definitions/DashletDTO"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "requestId": {
          "type": "string"
        },
        "responseId": {
          "type": "string"
        },
        "stackTrace": {
          "type": "string"
        },
        "synopsis": {
          "type": "string"
        }
      },
      "title": "RestResult«DashletDTO»"
    },
    "RestResult«EchdDataDTO»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "SUCCESS",
            "ERROR"
          ]
        },
        "data": {
          "$ref": "#/definitions/EchdDataDTO"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "requestId": {
          "type": "string"
        },
        "responseId": {
          "type": "string"
        },
        "stackTrace": {
          "type": "string"
        },
        "synopsis": {
          "type": "string"
        }
      },
      "title": "RestResult«EchdDataDTO»"
    },
    "RestResult«EchdStreamDataDTO»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "SUCCESS",
            "ERROR"
          ]
        },
        "data": {
          "$ref": "#/definitions/EchdStreamDataDTO"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "requestId": {
          "type": "string"
        },
        "responseId": {
          "type": "string"
        },
        "stackTrace": {
          "type": "string"
        },
        "synopsis": {
          "type": "string"
        }
      },
      "title": "RestResult«EchdStreamDataDTO»"
    },
    "RestResult«FieldMappingDTO»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "SUCCESS",
            "ERROR"
          ]
        },
        "data": {
          "$ref": "#/definitions/FieldMappingDTO"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "requestId": {
          "type": "string"
        },
        "responseId": {
          "type": "string"
        },
        "stackTrace": {
          "type": "string"
        },
        "synopsis": {
          "type": "string"
        }
      },
      "title": "RestResult«FieldMappingDTO»"
    },
    "RestResult«GraphicsDTO»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "SUCCESS",
            "ERROR"
          ]
        },
        "data": {
          "$ref": "#/definitions/GraphicsDTO"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "requestId": {
          "type": "string"
        },
        "responseId": {
          "type": "string"
        },
        "stackTrace": {
          "type": "string"
        },
        "synopsis": {
          "type": "string"
        }
      },
      "title": "RestResult«GraphicsDTO»"
    },
    "RestResult«HashMap«string,string»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "SUCCESS",
            "ERROR"
          ]
        },
        "data": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "requestId": {
          "type": "string"
        },
        "responseId": {
          "type": "string"
        },
        "stackTrace": {
          "type": "string"
        },
        "synopsis": {
          "type": "string"
        }
      },
      "title": "RestResult«HashMap«string,string»»"
    },
    "RestResult«LayerObjectInfoDTO»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "SUCCESS",
            "ERROR"
          ]
        },
        "data": {
          "$ref": "#/definitions/LayerObjectInfoDTO"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "requestId": {
          "type": "string"
        },
        "responseId": {
          "type": "string"
        },
        "stackTrace": {
          "type": "string"
        },
        "synopsis": {
          "type": "string"
        }
      },
      "title": "RestResult«LayerObjectInfoDTO»"
    },
    "RestResult«LayerSingleObjectDTO»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "SUCCESS",
            "ERROR"
          ]
        },
        "data": {
          "$ref": "#/definitions/LayerSingleObjectDTO"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "requestId": {
          "type": "string"
        },
        "responseId": {
          "type": "string"
        },
        "stackTrace": {
          "type": "string"
        },
        "synopsis": {
          "type": "string"
        }
      },
      "title": "RestResult«LayerSingleObjectDTO»"
    },
    "RestResult«LegendEditingDTO»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "SUCCESS",
            "ERROR"
          ]
        },
        "data": {
          "$ref": "#/definitions/LegendEditingDTO"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "requestId": {
          "type": "string"
        },
        "responseId": {
          "type": "string"
        },
        "stackTrace": {
          "type": "string"
        },
        "synopsis": {
          "type": "string"
        }
      },
      "title": "RestResult«LegendEditingDTO»"
    },
    "RestResult«List«ActiveFilterDTO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "SUCCESS",
            "ERROR"
          ]
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ActiveFilterDTO"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "requestId": {
          "type": "string"
        },
        "responseId": {
          "type": "string"
        },
        "stackTrace": {
          "type": "string"
        },
        "synopsis": {
          "type": "string"
        }
      },
      "title": "RestResult«List«ActiveFilterDTO»»"
    },
    "RestResult«List«FieldMappingDTO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "SUCCESS",
            "ERROR"
          ]
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldMappingDTO"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "requestId": {
          "type": "string"
        },
        "responseId": {
          "type": "string"
        },
        "stackTrace": {
          "type": "string"
        },
        "synopsis": {
          "type": "string"
        }
      },
      "title": "RestResult«List«FieldMappingDTO»»"
    },
    "RestResult«List«LayerAliasDTO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "SUCCESS",
            "ERROR"
          ]
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LayerAliasDTO"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "requestId": {
          "type": "string"
        },
        "responseId": {
          "type": "string"
        },
        "stackTrace": {
          "type": "string"
        },
        "synopsis": {
          "type": "string"
        }
      },
      "title": "RestResult«List«LayerAliasDTO»»"
    },
    "RestResult«List«LegendDTO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "SUCCESS",
            "ERROR"
          ]
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LegendDTO"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "requestId": {
          "type": "string"
        },
        "responseId": {
          "type": "string"
        },
        "stackTrace": {
          "type": "string"
        },
        "synopsis": {
          "type": "string"
        }
      },
      "title": "RestResult«List«LegendDTO»»"
    },
    "RestResult«List«TsInfoDTO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "SUCCESS",
            "ERROR"
          ]
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TsInfoDTO"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "requestId": {
          "type": "string"
        },
        "responseId": {
          "type": "string"
        },
        "stackTrace": {
          "type": "string"
        },
        "synopsis": {
          "type": "string"
        }
      },
      "title": "RestResult«List«TsInfoDTO»»"
    },
    "RestResult«List«WidgetElement»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "SUCCESS",
            "ERROR"
          ]
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WidgetElement"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "requestId": {
          "type": "string"
        },
        "responseId": {
          "type": "string"
        },
        "stackTrace": {
          "type": "string"
        },
        "synopsis": {
          "type": "string"
        }
      },
      "title": "RestResult«List«WidgetElement»»"
    },
    "RestResult«List«string»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "SUCCESS",
            "ERROR"
          ]
        },
        "data": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "requestId": {
          "type": "string"
        },
        "responseId": {
          "type": "string"
        },
        "stackTrace": {
          "type": "string"
        },
        "synopsis": {
          "type": "string"
        }
      },
      "title": "RestResult«List«string»»"
    },
    "RestResult«Map«string,string»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "SUCCESS",
            "ERROR"
          ]
        },
        "data": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "requestId": {
          "type": "string"
        },
        "responseId": {
          "type": "string"
        },
        "stackTrace": {
          "type": "string"
        },
        "synopsis": {
          "type": "string"
        }
      },
      "title": "RestResult«Map«string,string»»"
    },
    "RestResult«Map»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "SUCCESS",
            "ERROR"
          ]
        },
        "data": {
          "type": "object"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "requestId": {
          "type": "string"
        },
        "responseId": {
          "type": "string"
        },
        "stackTrace": {
          "type": "string"
        },
        "synopsis": {
          "type": "string"
        }
      },
      "title": "RestResult«Map»"
    },
    "RestResult«PageResult«LayerDTO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "SUCCESS",
            "ERROR"
          ]
        },
        "data": {
          "$ref": "#/definitions/PageResult«LayerDTO»"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "requestId": {
          "type": "string"
        },
        "responseId": {
          "type": "string"
        },
        "stackTrace": {
          "type": "string"
        },
        "synopsis": {
          "type": "string"
        }
      },
      "title": "RestResult«PageResult«LayerDTO»»"
    },
    "RestResult«PageResult«LegendEditingDTO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "SUCCESS",
            "ERROR"
          ]
        },
        "data": {
          "$ref": "#/definitions/PageResult«LegendEditingDTO»"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "requestId": {
          "type": "string"
        },
        "responseId": {
          "type": "string"
        },
        "stackTrace": {
          "type": "string"
        },
        "synopsis": {
          "type": "string"
        }
      },
      "title": "RestResult«PageResult«LegendEditingDTO»»"
    },
    "RestResult«PageResult«ObjectForTableDTO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "SUCCESS",
            "ERROR"
          ]
        },
        "data": {
          "$ref": "#/definitions/PageResult«ObjectForTableDTO»"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "requestId": {
          "type": "string"
        },
        "responseId": {
          "type": "string"
        },
        "stackTrace": {
          "type": "string"
        },
        "synopsis": {
          "type": "string"
        }
      },
      "title": "RestResult«PageResult«ObjectForTableDTO»»"
    },
    "RestResult«ReportInfoDTO»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "SUCCESS",
            "ERROR"
          ]
        },
        "data": {
          "$ref": "#/definitions/ReportInfoDTO"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "requestId": {
          "type": "string"
        },
        "responseId": {
          "type": "string"
        },
        "stackTrace": {
          "type": "string"
        },
        "synopsis": {
          "type": "string"
        }
      },
      "title": "RestResult«ReportInfoDTO»"
    },
    "RestResult«ViolationCardDTO»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "SUCCESS",
            "ERROR"
          ]
        },
        "data": {
          "$ref": "#/definitions/ViolationCardDTO"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "requestId": {
          "type": "string"
        },
        "responseId": {
          "type": "string"
        },
        "stackTrace": {
          "type": "string"
        },
        "synopsis": {
          "type": "string"
        }
      },
      "title": "RestResult«ViolationCardDTO»"
    },
    "RestResult«WidgetFilter»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "SUCCESS",
            "ERROR"
          ]
        },
        "data": {
          "$ref": "#/definitions/WidgetFilter"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "requestId": {
          "type": "string"
        },
        "responseId": {
          "type": "string"
        },
        "stackTrace": {
          "type": "string"
        },
        "synopsis": {
          "type": "string"
        }
      },
      "title": "RestResult«WidgetFilter»"
    },
    "RestResult«boolean»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "SUCCESS",
            "ERROR"
          ]
        },
        "data": {
          "type": "boolean"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "requestId": {
          "type": "string"
        },
        "responseId": {
          "type": "string"
        },
        "stackTrace": {
          "type": "string"
        },
        "synopsis": {
          "type": "string"
        }
      },
      "title": "RestResult«boolean»"
    },
    "RestResult«string»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "SUCCESS",
            "ERROR"
          ]
        },
        "data": {
          "type": "string"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "requestId": {
          "type": "string"
        },
        "responseId": {
          "type": "string"
        },
        "stackTrace": {
          "type": "string"
        },
        "synopsis": {
          "type": "string"
        }
      },
      "title": "RestResult«string»"
    },
    "TsInfoDTO": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Отображаемая надпись"
        },
        "type": {
          "type": "string",
          "description": "Тип"
        },
        "value": {
          "type": "string",
          "description": "Значение для маппинга"
        }
      },
      "title": "TsInfoDTO",
      "description": "Сущность записи справочника ТС"
    },
    "View": {
      "type": "object",
      "properties": {
        "contentType": {
          "type": "string"
        }
      },
      "title": "View"
    },
    "ViolationCardDTO": {
      "type": "object",
      "properties": {
        "description": {
          "description": "Описание нарушения",
          "$ref": "#/definitions/ViolationDescription"
        },
        "fotosAfter": {
          "type": "array",
          "description": "Фотографии после устранения",
          "items": {
            "$ref": "#/definitions/ViolationFotoDTO"
          }
        },
        "fotosBefore": {
          "type": "array",
          "description": "Фотографии до устранения",
          "items": {
            "$ref": "#/definitions/ViolationFotoDTO"
          }
        },
        "video": {
          "description": "Данные по камере",
          "$ref": "#/definitions/ViolationVideoDTO"
        }
      },
      "title": "ViolationCardDTO",
      "description": "Данные по карточке нарушения с информацией по фото для НГ"
    },
    "ViolationDescription": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "title": "ViolationDescription"
    },
    "ViolationForTableDTO": {
      "type": "object",
      "title": "ViolationForTableDTO",
      "description": "Данные о нарушении для таблицы"
    },
    "ViolationFotoDTO": {
      "type": "object",
      "properties": {
        "mimeType": {
          "type": "string",
          "description": "Тип"
        },
        "name": {
          "type": "string",
          "description": "Название"
        },
        "size": {
          "type": "integer",
          "format": "int32",
          "description": "Размер"
        },
        "url": {
          "type": "string",
          "description": "Ссылка на фото"
        }
      },
      "title": "ViolationFotoDTO",
      "description": "Фото с нарушения"
    },
    "ViolationInfoDTO": {
      "type": "object",
      "properties": {
        "critical": {
          "type": "boolean",
          "description": "Признак критичности нарушения"
        },
        "dateClose": {
          "type": "string",
          "format": "date-time",
          "description": "Дата и время когда перестает отображатся нарушение"
        },
        "element1": {
          "type": "string",
          "description": "Элемент - 1"
        },
        "element2": {
          "type": "string",
          "description": "Элемент - 2"
        },
        "fixationDate": {
          "type": "string",
          "format": "date-time",
          "description": "Дата фиксации нарушения"
        },
        "hasPhotoVideo": {
          "type": "boolean",
          "description": "Флаг присутствия фото/видео"
        },
        "id": {
          "type": "string",
          "description": "Идентификатор"
        },
        "idSystem": {
          "type": "string",
          "example": "mkd",
          "description": "Идентификатор системы"
        },
        "idSystemName": {
          "type": "string",
          "example": "МКД",
          "description": "Имя системы"
        },
        "latitude": {
          "type": "number",
          "format": "double",
          "description": "Широта"
        },
        "longitude": {
          "type": "number",
          "format": "double",
          "description": "Долгота"
        },
        "season": {
          "type": "string",
          "description": "Сезон"
        },
        "systemGroup": {
          "type": "string",
          "description": "группа системы"
        },
        "systematic": {
          "type": "boolean",
          "description": "Признак систематичности нарушения"
        },
        "text": {
          "type": "string",
          "description": "Текст нарушения"
        },
        "ticket": {
          "type": "string",
          "description": "Номер тикета"
        },
        "violationType": {
          "type": "string",
          "example": "CMN",
          "description": "Тип нарушения"
        }
      },
      "title": "ViolationInfoDTO",
      "description": "Данные о нарушении"
    },
    "ViolationVideoDTO": {
      "type": "object",
      "properties": {
        "cameraAddress": {
          "type": "string",
          "description": "Адрес камеры"
        },
        "cameraCode": {
          "type": "string",
          "description": "Код камеры"
        },
        "cameraId": {
          "type": "string",
          "description": "Идентификатор камеры"
        }
      },
      "title": "ViolationVideoDTO",
      "description": "Информация о видео"
    },
    "WidgetData": {
      "type": "object",
      "properties": {
        "color": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "title": "WidgetData"
    },
    "WidgetElement": {
      "type": "object",
      "properties": {
        "active": {
          "type": "boolean"
        },
        "color": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "percent": {
          "type": "string"
        },
        "percentValue": {
          "type": "number"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "number"
        }
      },
      "title": "WidgetElement"
    },
    "WidgetFilter": {
      "type": "object",
      "properties": {
        "defects": {
          "type": "array",
          "description": "Данные для виджета <Типы нарушений>",
          "items": {
            "$ref": "#/definitions/WidgetData"
          }
        },
        "districts": {
          "type": "array",
          "description": "Данные для виджета <Районы>",
          "items": {
            "$ref": "#/definitions/WidgetData"
          }
        },
        "events": {
          "type": "array",
          "description": "Данные для виджета <События>",
          "items": {
            "$ref": "#/definitions/WidgetData"
          }
        },
        "objects": {
          "type": "array",
          "description": "Данные для виджета <Объекты>",
          "items": {
            "$ref": "#/definitions/WidgetData"
          }
        },
        "regions": {
          "type": "array",
          "description": "Данные для виджета <Округа>",
          "items": {
            "$ref": "#/definitions/WidgetData"
          }
        },
        "search": {
          "type": "array",
          "description": "Данные для поиска",
          "items": {
            "$ref": "#/definitions/FilterSearch"
          }
        },
        "sourceGroups": {
          "type": "array",
          "description": "Данные для виджета <Группы источников>",
          "items": {
            "$ref": "#/definitions/WidgetData"
          }
        },
        "sources": {
          "type": "array",
          "description": "Данные для виджета <Источники>",
          "items": {
            "$ref": "#/definitions/WidgetData"
          }
        }
      },
      "title": "WidgetFilter"
    }
  }
}
